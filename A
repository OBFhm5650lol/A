local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/hm5650/Rayfield/refs/heads/main/RayField'))()
local Window = Rayfield:CreateWindow({
   Name = "Swordblox⚔️",
   Icon = 125153819502786, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "SwordBlox⚔️ {v0.2}",
   LoadingSubtitle = "Script Made By Hmmm5650",
   Theme = "AmberGlow", -- Check 

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "sb"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use sbhbomething unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Info", "book")
local Label = Tab:CreateLabel("YT: @hmmm5650", "rewind")
local Paragraph = Tab:CreateParagraph({Title = "[About]", Content = "Swordblox is a completely free to use exploit with no KeySystems and has enough features to destroy your victims"})
local Paragraph = Tab:CreateParagraph({Title = "[UpdateLog]", Content = "Rewritten The Whole Script"})
local Tab = Window:CreateTab("Local", "user")

-- Get all players for the dropdown options
local players = game:GetService("Players"):GetPlayers()
local playerNames = {}
for _, player in ipairs(players) do
    table.insert(playerNames, player.Name)
end

-- Teleport to player dropdown
local Dropdown = Tab:CreateDropdown({
    Name = "Teleport to player",
    Options = playerNames,
    CurrentOption = playerNames[1] or "No players",
    MultipleOptions = false,
    Flag = "PlayerDropdown",
    Callback = function(selectedPlayer)
        local target = game:GetService("Players"):FindFirstChild(selectedPlayer[1])
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character:MoveTo(target.Character.HumanoidRootPart.Position)
        end
    end,
})

-- Walkspeed toggle and slider with linked functionality
local walkspeedEnabled = false
local currentWalkspeed = 16 -- Default walkspeed

local Toggle = Tab:CreateToggle({
    Name = "Change Walkspeed [Mid Risk]",
    CurrentValue = false,
    Flag = "WalkspeedToggle",
    Callback = function(Value)
        walkspeedEnabled = Value
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if walkspeedEnabled then
                humanoid.WalkSpeed = currentWalkspeed
            else
                humanoid.WalkSpeed = 16 -- Reset to default
            end
        end
    end,
})

local Slider = Tab:CreateSlider({
    Name = "Walkspeed Value",
    Range = {16, 100}, -- Minimum is normal walkspeed
    Increment = 1,
    Suffix = "studs/s",
    CurrentValue = 16,
    Flag = "WalkspeedSlider",
    Callback = function(Value)
        currentWalkspeed = Value
        if walkspeedEnabled then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = Value
            end
        end
    end,
})

local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BHopGUI"
screenGui.ResetOnSpawn = false
screenGui.Enabled = false -- Controlled by external toggle
screenGui.Parent = player:WaitForChild("PlayerGui")

-- BHop Button
local bhopButton = Instance.new("TextButton")
bhopButton.Name = "BHopButton"
bhopButton.Size = UDim2.new(0, 120, 0, 50)
bhopButton.Position = UDim2.new(0, 60, 0, 60)
bhopButton.BackgroundColor3 = Color3.fromRGB(75, 151, 75)
bhopButton.BackgroundTransparency = 0.3
bhopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
bhopButton.Text = "BHop: OFF"
bhopButton.Font = Enum.Font.Gotham
bhopButton.TextSize = 14
bhopButton.Active = true
bhopButton.Draggable = true
bhopButton.Parent = screenGui

-- Rounded corners
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0.3, 0)
uiCorner.Parent = bhopButton

-- BHop State
local bhopEnabled = false

-- Toggle Text + State
bhopButton.MouseButton1Click:Connect(function()
    bhopEnabled = not bhopEnabled
    bhopButton.Text = "BHop: " .. (bhopEnabled and "ON" or "OFF")
end)

-- Auto BHop Loop
task.spawn(function()
    while true do
        task.wait(0.03)
        if bhopEnabled then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                local humanoid = character.Humanoid
                if humanoid:GetState() == Enum.HumanoidStateType.Running or humanoid:GetState() == Enum.HumanoidStateType.Landed then
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end
        end
    end
end)

local Toggle = Tab:CreateToggle({
   Name = "Bhop",
   CurrentValue = false,
   Flag = "Togglebhop", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   screenGui.Enabled = Value
   end,
})

-- Add player list refresh button
local Button = Tab:CreateButton({
    Name = "Refresh Player List",
    Callback = function()
        local players = game:GetService("Players"):GetPlayers()
        local newNames = {}
        for _, player in ipairs(players) do
            table.insert(newNames, player.Name)
        end
        
        -- Update dropdown options
        Dropdown:Refresh({
            Options = newNames,
            CurrentOption = newNames[1] or "No players"
        })
    end
})

local Tab = Window:CreateTab("Misc", "box")

local Button = Tab:CreateButton({
   Name = "ShifLock",
   Callback = function()
   loadstring(game:HttpGet("https://github.com/ltseverydayyou/uuuuuuu/blob/main/shiftlock?raw=true"))()
   end,
})

local Tab = Window:CreateTab("Admins", "user-check")

local Button = Tab:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})

local Button = Tab:CreateButton({
   Name = "Nameless Admin",
   Callback = function()
   loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Nameless-Admin-Official-15022"))()
   end,
})

local Button = Tab:CreateButton({
   Name = "Nameless Admin [V2]",
   Callback = function()
   loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-Nameless-admin-14114"))()
   end,
})

local Section = Tab:CreateSection("Try Our Admin Panel :)")

local Button = Tab:CreateButton({
   Name = "TerminalCmd",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/hm5650/TCmd/refs/heads/main/TerminalCmd", true))()
   end,
})


local Tab = Window:CreateTab("Sword Modification", "sword") -- Using sword icon (you can change this)

-- Reach system variables
local active = false
local dmgEnabled = false 
local visualizerEnabled = false
local visualizerHighlightEnabled = false
local currentReach = 3.5
local visualizerColor = Color3.fromRGB(255, 0, 0)
local highlightColor = Color3.fromRGB(255, 255, 0)

-- Visualizer setup
local visualizer = Instance.new("Part") 
visualizer.BrickColor = BrickColor.new(visualizerColor)
visualizer.Transparency = 0.6 
visualizer.Anchored = true 
visualizer.CanCollide = false 
visualizer.Size = Vector3.new(0.5, 0.5, 0.5) 
visualizer.BottomSurface = Enum.SurfaceType.Smooth 
visualizer.TopSurface = Enum.SurfaceType.Smooth 

-- Highlight setup (now specifically for the visualizer)
local visualizerHighlight = Instance.new("Highlight")
visualizerHighlight.Enabled = false
visualizerHighlight.FillTransparency = 0.7
visualizerHighlight.OutlineTransparency = 0
visualizerHighlight.FillColor = highlightColor
visualizerHighlight.OutlineColor = highlightColor
visualizerHighlight.Parent = visualizer

-- Create UI elements
local Section = Tab:CreateSection("[ Req, Sword ]")
local WarningSection = Tab:CreateSection("[ May Get You Banned ]")

local Toggle = Tab:CreateToggle({
   Name = "Start HTBE [High Risk]",
   CurrentValue = false,
   Flag = "HTBEToggle",
   Callback = function(Value)
        active = Value
   end,
})

Tab:CreateSection("Options")

local Toggle = Tab:CreateToggle({
   Name = "High Dmg [Low Risk]",
   CurrentValue = false,
   Flag = "HighDmgToggle",
   Callback = function(Value)
        dmgEnabled = Value
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Visualizer",
   CurrentValue = false,
   Flag = "VisualizerToggle",
   Callback = function(Value)
        visualizerEnabled = Value
        if not Value then
            visualizer.Parent = nil
        end
   end,
})

local Input = Tab:CreateInput({
   Name = "HurtboxSize [Textbox]",
   CurrentValue = "3.5",
   PlaceholderText = "3.5",
   Flag = "HurtboxInput",
   Callback = function(Text)
        currentReach = tonumber(Text) or 3.5
   end,
})

local Slider = Tab:CreateSlider({
   Name = "HurtboxSize [Slider]",
   Range = {0.1, 200},
   Increment = 5,
   Suffix = "units",
   CurrentValue = 3.5,
   Flag = "HurtboxSlider",
   Callback = function(Value)
        currentReach = Value
   end,
})

Tab:CreateSection("Visuals")

local ColorPicker = Tab:CreateColorPicker({
    Name = "Hurtbox Color",
    Color = visualizerColor,
    Flag = "HurtboxColor",
    Callback = function(Value)
        visualizerColor = Value
        visualizer.Color = Value
    end
})

-- Reach functionality
local function onHit(hit, handle)
    local victim = hit.Parent:FindFirstChildOfClass("Humanoid") 
    if victim and victim.Parent.Name ~= game.Players.LocalPlayer.Name then 
        if dmgEnabled then 
            for _,v in pairs(hit.Parent:GetChildren()) do 
                if v:IsA("Part") then 
                    firetouchinterest(v, handle, 0) 
                    firetouchinterest(v, handle, 1) 
                end 
            end 
        else 
            firetouchinterest(hit, handle, 0) 
            firetouchinterest(hit, handle, 1) 
        end 
    end 
end 

local function getWhiteList() 
    local wl = {} 
    for _,v in pairs(game.Players:GetPlayers()) do 
        if v ~= game.Players.LocalPlayer then 
            local char = v.Character 
            if char then 
                for _,q in pairs(char:GetChildren()) do 
                    if q:IsA("Part") then 
                        table.insert(wl, q) 
                    end 
                end 
            end 
        end 
    end 
    return wl 
end 

-- Main loop
game:GetService("RunService").RenderStepped:Connect(function() 
    if not active then 
        visualizer.Parent = nil
        return 
    end 
    
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return end
    
    local tool = character:FindFirstChildOfClass("Tool") 
    if not tool then 
        visualizer.Parent = nil
        return 
    end 
    
    local handle = tool:FindFirstChild("Handle") or tool:FindFirstChildOfClass("Part") 
    if not handle then 
        visualizer.Parent = nil
        return 
    end 
    
    -- Update visualizer if enabled
    if visualizerEnabled then 
        visualizer.Parent = workspace 
        visualizer.Shape = Enum.PartType.Ball 
        visualizer.Size = Vector3.new(currentReach, currentReach, currentReach) 
        visualizer.CFrame = handle.CFrame 
        visualizer.Color = visualizerColor
    else 
        visualizer.Parent = nil 
    end 
    
    -- Check for hits
    for _,v in pairs(game.Players:GetPlayers()) do 
        local hrp = v.Character and v.Character:FindFirstChild("HumanoidRootPart") 
        if hrp and handle then 
            local mag = (hrp.Position - handle.Position).magnitude 
            if mag <= currentReach then 
                onHit(hrp, handle) 
            end 
        end 
    end 
end)

Tab:CreateSection("Extras")

local Button = Tab:CreateButton({
   Name = "InstantKill [Low Risk]",
   Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/hm5650/InstantKillig/refs/heads/main/Coolkillguithingy", true))()
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Auto Swing",
   CurrentValue = false,
   Flag = "AutoSwingToggle",
   Callback = function(Value)
        if Value then
            _G.AutoSwing = true
            while _G.AutoSwing do
                pcall(function()
                    game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
                end)
                wait(0.1)
            end
        else
            _G.AutoSwing = false
        end
   end,
})

local Tab = Window:CreateTab("Protection", "shield")

local Button = Tab:CreateButton({
   Name = "Remove AntiCheats [RECOMMEND]",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/OBFhm5650lol/G/refs/heads/main/G"))()
   end,
})

-- Initialize variables
getgenv().HowFastDanSchneiderCatchesYou = 1
getgenv().HowMuchDanSchneiderTouchesYou = 15
getgenv().HowMuchDanSchneiderTouchedYou = 25
getgenv().Daddy_Catches_You = false


-- Create main tab
local MainTab = Window:CreateTab("SwordBot", "monitor")

-- Create sliders
MainTab:CreateSlider({
    Name = "Rotation Speed",
    Range = {0, 10},
    Increment = 0.01,
    Suffix = "Speed",
    CurrentValue = 1,
    Flag = "RotoSpeed",
    Callback = function(Value)
        getgenv().HowFastDanSchneiderCatchesYou = Value
    end,
})

MainTab:CreateSlider({
    Name = "Sword Range",
    Range = {0, 30},
    Increment = 1,
    Suffix = "Studs",
    CurrentValue = 15,
    Flag = "SwordRange",
    Callback = function(Value)
        getgenv().HowMuchDanSchneiderTouchesYou = Value
    end,
})

MainTab:CreateSlider({
    Name = "Attack Range",
    Range = {0, 10000},
    Increment = 50,
    Suffix = "Studs",
    CurrentValue = 25,
    Flag = "AttackRange",
    Callback = function(Value)
        getgenv().HowMuchDanSchneiderTouchedYou = Value
    end,
})

-- Create toggle for the auto-attack
MainTab:CreateToggle({
    Name = "Auto Attack",
    CurrentValue = false,
    Flag = "AutoAttackToggle",
    Callback = function(Value)
        getgenv().Daddy_Catches_You = Value
    end,
})

-- Set up the main functionality
game:GetService("RunService").RenderStepped:Connect(function()
    if getgenv().Daddy_Catches_You == true then
        spawn(function()
            local tool = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                local p = game.Players:GetPlayers()
                for i = 2, #p do
                    local v = p[i].Character
                    if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer:DistanceFromCharacter(v.HumanoidRootPart.Position) <= getgenv().HowMuchDanSchneiderTouchesYou then
                        for i,v in next, v:GetChildren() do
                            if v:IsA("BasePart") then
                                firetouchinterest(tool.Handle,v,0)
                                firetouchinterest(tool.Handle,v,1)
                            end
                        end
                    end
                end
            end
        end)
    end
end)

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = getgenv().HowMuchDanSchneiderTouchedYou
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v ~= game.Players.LocalPlayer then
            if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("HumanoidRootPart") then
                if not v.Character:FindFirstChildOfClass("ForceField") then
                    local magnitude = (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude
                    if magnitude < shortestDistance then
                        closestPlayer = v
                        shortestDistance = magnitude
                    end
                end
            end
        end
    end
    return closestPlayer
end

-- Disable unwanted humanoid states
local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)

-- Main loop
game:GetService("RunService").Heartbeat:Connect(function()
    if getgenv().Daddy_Catches_You and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local target = getClosestPlayer()
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.AutoRotate = false
                local root = game.Players.LocalPlayer.Character.HumanoidRootPart
                local targetPos = target.Character.HumanoidRootPart.Position
                root.CFrame = root.CFrame:Lerp(CFrame.new(root.Position, Vector3.new(targetPos.X, root.Position.Y, targetPos.Z)) * CFrame.Angles(0, math.rad(25), 0), getgenv().HowFastDanSchneiderCatchesYou)
                humanoid:MoveTo(target.Character.HumanoidRootPart.CFrame * CFrame.new(-3, 0, 0).p)
                
                if target.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                    humanoid.Jump = true
                end
            end
        end
    else
        local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.AutoRotate = true
        end
    end
end)

-- [[ THIS IS A SNIPPET ]] --

-- Import the Library
local fnl = loadstring(game:HttpGetAsync 'https://raw.githubusercontent.com/Code1Tech/utils/main/notification.lua')()

-- Make a Notification function
function notify(title, text, duration)
  title = title or "Notification"
  text = text or "No text provided."
  duration = duration or 5
  
  fnl:MakeNotification({
    Title = title,
    Text = text,
    Duration = duration
  })
end

-- [ LoadsScriptResources ]
pcall(function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/hm5650/LoadResources/refs/heads/main/ResSourcesLoaderSource", true))()
warn("StartedScript")
end)

-- Use the func
notify("GUI Loaded", "Thanks For Using SwordBlox :)", 4)
